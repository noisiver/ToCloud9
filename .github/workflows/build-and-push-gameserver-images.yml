name: Build and Push Gameserver Images

on:
  workflow_dispatch:

jobs:
  build-and-push-amd64:
    runs-on: ubuntu-latest
    outputs:
      amd_64_digest: ${{ steps.amddigest.outputs.amd_64_digest }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: 'Set up Docker Buildx'
        uses: docker/setup-buildx-action@v3
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Build and push AzerothCore gameserver image (AMD64)'
        run: |
          docker buildx build --push --platform linux/amd64 --output=type=image \
            --metadata-file metadata-amd64.json \
            -t ghcr.io/${{ github.actor }}/gameserver-ac:${{ github.ref_name }} \
            -f game-server/azerothcore/Dockerfile .
      - name: 'Get AMD64 image digest'
        id: amddigest
        run: |
          AMD64_DIGEST=$(jq -r '.["containerimage.digest"]' metadata-amd64.json)
          AMD64_DIGEST=$(docker buildx imagetools inspect ghcr.io/${{ github.actor }}/gameserver-ac@${AMD64_DIGEST} | awk '/Platform:.*linux\/amd64/ {p=1} p && /Annotations/ {getline; print $2; p=0}')
          echo "amd_64_digest=${AMD64_DIGEST}" >> $GITHUB_OUTPUT

  build-and-push-arm64:
    runs-on: ubuntu-24.04-arm
    outputs:
      arm_64_digest: ${{ steps.armdigest.outputs.arm_64_digest }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: 'Set up Docker Buildx'
        uses: docker/setup-buildx-action@v3
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Build and push AzerothCore gameserver image (ARM64)'
        run: |
          docker buildx build --push --platform linux/arm64 --output=type=image \
            --metadata-file metadata-arm64.json \
            -t ghcr.io/${{ github.actor }}/gameserver-ac:${{ github.ref_name }} \
            -f game-server/azerothcore/Dockerfile .
      - name: 'Get ARM64 image digest'
        id: armdigest
        run: |
          ARM64_DIGEST=$(jq -r '.["containerimage.digest"]' metadata-arm64.json)
          ARM64_DIGEST=$(docker buildx imagetools inspect ghcr.io/${{ github.actor }}/gameserver-ac@${ARM64_DIGEST} | awk '/Platform:.*linux\/arm64/ {p=1} p && /Annotations/ {getline; print $2; p=0}')
          echo "arm_64_digest=${ARM64_DIGEST}" >> $GITHUB_OUTPUT

  create-manifest:
    runs-on: ubuntu-latest
    needs: [build-and-push-amd64, build-and-push-arm64]
    steps:
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Create and push multi-arch manifest'
        env:
          AMD64_DIGEST: ${{ needs.build-and-push-amd64.outputs.amd_64_digest }}
          ARM64_DIGEST: ${{ needs.build-and-push-arm64.outputs.arm_64_digest }}
        run: |
          curl -L https://github.com/regclient/regclient/releases/latest/download/regctl-linux-amd64 >regctl
          chmod 755 regctl
          
          ./regctl index create ghcr.io/${{ github.actor }}/gameserver-ac:${{ github.ref_name }}
          ./regctl index add --desc-platform linux/amd64 ghcr.io/${{ github.actor }}/gameserver-ac:${{ github.ref_name }} --ref ghcr.io/${{ github.actor }}/gameserver-ac@${{ env.AMD64_DIGEST }}
          ./regctl index add --desc-platform linux/arm64 ghcr.io/${{ github.actor }}/gameserver-ac:${{ github.ref_name }} --ref ghcr.io/${{ github.actor }}/gameserver-ac@${{ env.ARM64_DIGEST }}
