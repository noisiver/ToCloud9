// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.20.3
// source: matchmaking.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PVPTeamID int32

const (
	PVPTeamID_Any      PVPTeamID = 0
	PVPTeamID_Alliance PVPTeamID = 1
	PVPTeamID_Horde    PVPTeamID = 2
)

// Enum value maps for PVPTeamID.
var (
	PVPTeamID_name = map[int32]string{
		0: "Any",
		1: "Alliance",
		2: "Horde",
	}
	PVPTeamID_value = map[string]int32{
		"Any":      0,
		"Alliance": 1,
		"Horde":    2,
	}
)

func (x PVPTeamID) Enum() *PVPTeamID {
	p := new(PVPTeamID)
	*p = x
	return p
}

func (x PVPTeamID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PVPTeamID) Descriptor() protoreflect.EnumDescriptor {
	return file_matchmaking_proto_enumTypes[0].Descriptor()
}

func (PVPTeamID) Type() protoreflect.EnumType {
	return &file_matchmaking_proto_enumTypes[0]
}

func (x PVPTeamID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PVPTeamID.Descriptor instead.
func (PVPTeamID) EnumDescriptor() ([]byte, []int) {
	return file_matchmaking_proto_rawDescGZIP(), []int{0}
}

type PlayerQueueStatus int32

const (
	PlayerQueueStatus_NotInQueue PlayerQueueStatus = 0
	PlayerQueueStatus_InQueue    PlayerQueueStatus = 1
	PlayerQueueStatus_Invited    PlayerQueueStatus = 2
	PlayerQueueStatus_InProgress PlayerQueueStatus = 3
)

// Enum value maps for PlayerQueueStatus.
var (
	PlayerQueueStatus_name = map[int32]string{
		0: "NotInQueue",
		1: "InQueue",
		2: "Invited",
		3: "InProgress",
	}
	PlayerQueueStatus_value = map[string]int32{
		"NotInQueue": 0,
		"InQueue":    1,
		"Invited":    2,
		"InProgress": 3,
	}
)

func (x PlayerQueueStatus) Enum() *PlayerQueueStatus {
	p := new(PlayerQueueStatus)
	*p = x
	return p
}

func (x PlayerQueueStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerQueueStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_matchmaking_proto_enumTypes[1].Descriptor()
}

func (PlayerQueueStatus) Type() protoreflect.EnumType {
	return &file_matchmaking_proto_enumTypes[1]
}

func (x PlayerQueueStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerQueueStatus.Descriptor instead.
func (PlayerQueueStatus) EnumDescriptor() ([]byte, []int) {
	return file_matchmaking_proto_rawDescGZIP(), []int{1}
}

// Use the same statuses as in gameserver (AC/TC)
type BattlegroundStatusChangedRequest_Status int32

const (
	BattlegroundStatusChangedRequest_None       BattlegroundStatusChangedRequest_Status = 0 // unused
	BattlegroundStatusChangedRequest_WaitQueue  BattlegroundStatusChangedRequest_Status = 1 // unused
	BattlegroundStatusChangedRequest_WaitJoin   BattlegroundStatusChangedRequest_Status = 2 // unused
	BattlegroundStatusChangedRequest_InProgress BattlegroundStatusChangedRequest_Status = 3
	BattlegroundStatusChangedRequest_Ended      BattlegroundStatusChangedRequest_Status = 4
)

// Enum value maps for BattlegroundStatusChangedRequest_Status.
var (
	BattlegroundStatusChangedRequest_Status_name = map[int32]string{
		0: "None",
		1: "WaitQueue",
		2: "WaitJoin",
		3: "InProgress",
		4: "Ended",
	}
	BattlegroundStatusChangedRequest_Status_value = map[string]int32{
		"None":       0,
		"WaitQueue":  1,
		"WaitJoin":   2,
		"InProgress": 3,
		"Ended":      4,
	}
)

func (x BattlegroundStatusChangedRequest_Status) Enum() *BattlegroundStatusChangedRequest_Status {
	p := new(BattlegroundStatusChangedRequest_Status)
	*p = x
	return p
}

func (x BattlegroundStatusChangedRequest_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BattlegroundStatusChangedRequest_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_matchmaking_proto_enumTypes[2].Descriptor()
}

func (BattlegroundStatusChangedRequest_Status) Type() protoreflect.EnumType {
	return &file_matchmaking_proto_enumTypes[2]
}

func (x BattlegroundStatusChangedRequest_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BattlegroundStatusChangedRequest_Status.Descriptor instead.
func (BattlegroundStatusChangedRequest_Status) EnumDescriptor() ([]byte, []int) {
	return file_matchmaking_proto_rawDescGZIP(), []int{10, 0}
}

type EnqueueToBattlegroundRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api          string    `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	RealmID      uint32    `protobuf:"varint,2,opt,name=realmID,proto3" json:"realmID,omitempty"`
	LeaderGUID   uint64    `protobuf:"varint,3,opt,name=leaderGUID,proto3" json:"leaderGUID,omitempty"`
	PartyMembers []uint64  `protobuf:"varint,4,rep,packed,name=partyMembers,proto3" json:"partyMembers,omitempty"`
	LeadersLvl   uint32    `protobuf:"varint,5,opt,name=leadersLvl,proto3" json:"leadersLvl,omitempty"`
	BgTypeID     uint32    `protobuf:"varint,6,opt,name=bgTypeID,proto3" json:"bgTypeID,omitempty"`
	TeamID       PVPTeamID `protobuf:"varint,7,opt,name=teamID,proto3,enum=v1.PVPTeamID" json:"teamID,omitempty"`
}

func (x *EnqueueToBattlegroundRequest) Reset() {
	*x = EnqueueToBattlegroundRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaking_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnqueueToBattlegroundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueToBattlegroundRequest) ProtoMessage() {}

func (x *EnqueueToBattlegroundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaking_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueToBattlegroundRequest.ProtoReflect.Descriptor instead.
func (*EnqueueToBattlegroundRequest) Descriptor() ([]byte, []int) {
	return file_matchmaking_proto_rawDescGZIP(), []int{0}
}

func (x *EnqueueToBattlegroundRequest) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *EnqueueToBattlegroundRequest) GetRealmID() uint32 {
	if x != nil {
		return x.RealmID
	}
	return 0
}

func (x *EnqueueToBattlegroundRequest) GetLeaderGUID() uint64 {
	if x != nil {
		return x.LeaderGUID
	}
	return 0
}

func (x *EnqueueToBattlegroundRequest) GetPartyMembers() []uint64 {
	if x != nil {
		return x.PartyMembers
	}
	return nil
}

func (x *EnqueueToBattlegroundRequest) GetLeadersLvl() uint32 {
	if x != nil {
		return x.LeadersLvl
	}
	return 0
}

func (x *EnqueueToBattlegroundRequest) GetBgTypeID() uint32 {
	if x != nil {
		return x.BgTypeID
	}
	return 0
}

func (x *EnqueueToBattlegroundRequest) GetTeamID() PVPTeamID {
	if x != nil {
		return x.TeamID
	}
	return PVPTeamID_Any
}

type EnqueueToBattlegroundResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
}

func (x *EnqueueToBattlegroundResponse) Reset() {
	*x = EnqueueToBattlegroundResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaking_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnqueueToBattlegroundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueToBattlegroundResponse) ProtoMessage() {}

func (x *EnqueueToBattlegroundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaking_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueToBattlegroundResponse.ProtoReflect.Descriptor instead.
func (*EnqueueToBattlegroundResponse) Descriptor() ([]byte, []int) {
	return file_matchmaking_proto_rawDescGZIP(), []int{1}
}

func (x *EnqueueToBattlegroundResponse) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

type RemovePlayerFromQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api              string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	RealmID          uint32 `protobuf:"varint,2,opt,name=realmID,proto3" json:"realmID,omitempty"`
	PlayerGUID       uint64 `protobuf:"varint,3,opt,name=playerGUID,proto3" json:"playerGUID,omitempty"`
	BattlegroundType uint32 `protobuf:"varint,4,opt,name=battlegroundType,proto3" json:"battlegroundType,omitempty"`
}

func (x *RemovePlayerFromQueueRequest) Reset() {
	*x = RemovePlayerFromQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaking_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePlayerFromQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePlayerFromQueueRequest) ProtoMessage() {}

func (x *RemovePlayerFromQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaking_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePlayerFromQueueRequest.ProtoReflect.Descriptor instead.
func (*RemovePlayerFromQueueRequest) Descriptor() ([]byte, []int) {
	return file_matchmaking_proto_rawDescGZIP(), []int{2}
}

func (x *RemovePlayerFromQueueRequest) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *RemovePlayerFromQueueRequest) GetRealmID() uint32 {
	if x != nil {
		return x.RealmID
	}
	return 0
}

func (x *RemovePlayerFromQueueRequest) GetPlayerGUID() uint64 {
	if x != nil {
		return x.PlayerGUID
	}
	return 0
}

func (x *RemovePlayerFromQueueRequest) GetBattlegroundType() uint32 {
	if x != nil {
		return x.BattlegroundType
	}
	return 0
}

type RemovePlayerFromQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
}

func (x *RemovePlayerFromQueueResponse) Reset() {
	*x = RemovePlayerFromQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaking_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePlayerFromQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePlayerFromQueueResponse) ProtoMessage() {}

func (x *RemovePlayerFromQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaking_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePlayerFromQueueResponse.ProtoReflect.Descriptor instead.
func (*RemovePlayerFromQueueResponse) Descriptor() ([]byte, []int) {
	return file_matchmaking_proto_rawDescGZIP(), []int{3}
}

func (x *RemovePlayerFromQueueResponse) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

type BattlegroundQueueDataForPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api        string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	RealmID    uint32 `protobuf:"varint,2,opt,name=realmID,proto3" json:"realmID,omitempty"`
	PlayerGUID uint64 `protobuf:"varint,3,opt,name=playerGUID,proto3" json:"playerGUID,omitempty"`
}

func (x *BattlegroundQueueDataForPlayerRequest) Reset() {
	*x = BattlegroundQueueDataForPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaking_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattlegroundQueueDataForPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattlegroundQueueDataForPlayerRequest) ProtoMessage() {}

func (x *BattlegroundQueueDataForPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaking_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattlegroundQueueDataForPlayerRequest.ProtoReflect.Descriptor instead.
func (*BattlegroundQueueDataForPlayerRequest) Descriptor() ([]byte, []int) {
	return file_matchmaking_proto_rawDescGZIP(), []int{4}
}

func (x *BattlegroundQueueDataForPlayerRequest) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *BattlegroundQueueDataForPlayerRequest) GetRealmID() uint32 {
	if x != nil {
		return x.RealmID
	}
	return 0
}

func (x *BattlegroundQueueDataForPlayerRequest) GetPlayerGUID() uint64 {
	if x != nil {
		return x.PlayerGUID
	}
	return 0
}

type BattlegroundQueueDataForPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api   string                                              `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Slots []*BattlegroundQueueDataForPlayerResponse_QueueSlot `protobuf:"bytes,2,rep,name=slots,proto3" json:"slots,omitempty"`
}

func (x *BattlegroundQueueDataForPlayerResponse) Reset() {
	*x = BattlegroundQueueDataForPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaking_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattlegroundQueueDataForPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattlegroundQueueDataForPlayerResponse) ProtoMessage() {}

func (x *BattlegroundQueueDataForPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaking_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattlegroundQueueDataForPlayerResponse.ProtoReflect.Descriptor instead.
func (*BattlegroundQueueDataForPlayerResponse) Descriptor() ([]byte, []int) {
	return file_matchmaking_proto_rawDescGZIP(), []int{5}
}

func (x *BattlegroundQueueDataForPlayerResponse) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *BattlegroundQueueDataForPlayerResponse) GetSlots() []*BattlegroundQueueDataForPlayerResponse_QueueSlot {
	if x != nil {
		return x.Slots
	}
	return nil
}

type PlayerLeftBattlegroundRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api          string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	RealmID      uint32 `protobuf:"varint,2,opt,name=realmID,proto3" json:"realmID,omitempty"`
	PlayerGUID   uint64 `protobuf:"varint,3,opt,name=playerGUID,proto3" json:"playerGUID,omitempty"`
	InstanceID   uint32 `protobuf:"varint,4,opt,name=instanceID,proto3" json:"instanceID,omitempty"`
	IsCrossRealm bool   `protobuf:"varint,5,opt,name=isCrossRealm,proto3" json:"isCrossRealm,omitempty"`
}

func (x *PlayerLeftBattlegroundRequest) Reset() {
	*x = PlayerLeftBattlegroundRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaking_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerLeftBattlegroundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerLeftBattlegroundRequest) ProtoMessage() {}

func (x *PlayerLeftBattlegroundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaking_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerLeftBattlegroundRequest.ProtoReflect.Descriptor instead.
func (*PlayerLeftBattlegroundRequest) Descriptor() ([]byte, []int) {
	return file_matchmaking_proto_rawDescGZIP(), []int{6}
}

func (x *PlayerLeftBattlegroundRequest) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *PlayerLeftBattlegroundRequest) GetRealmID() uint32 {
	if x != nil {
		return x.RealmID
	}
	return 0
}

func (x *PlayerLeftBattlegroundRequest) GetPlayerGUID() uint64 {
	if x != nil {
		return x.PlayerGUID
	}
	return 0
}

func (x *PlayerLeftBattlegroundRequest) GetInstanceID() uint32 {
	if x != nil {
		return x.InstanceID
	}
	return 0
}

func (x *PlayerLeftBattlegroundRequest) GetIsCrossRealm() bool {
	if x != nil {
		return x.IsCrossRealm
	}
	return false
}

type PlayerLeftBattlegroundResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
}

func (x *PlayerLeftBattlegroundResponse) Reset() {
	*x = PlayerLeftBattlegroundResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaking_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerLeftBattlegroundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerLeftBattlegroundResponse) ProtoMessage() {}

func (x *PlayerLeftBattlegroundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaking_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerLeftBattlegroundResponse.ProtoReflect.Descriptor instead.
func (*PlayerLeftBattlegroundResponse) Descriptor() ([]byte, []int) {
	return file_matchmaking_proto_rawDescGZIP(), []int{7}
}

func (x *PlayerLeftBattlegroundResponse) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

type PlayerJoinedBattlegroundRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api          string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	RealmID      uint32 `protobuf:"varint,2,opt,name=realmID,proto3" json:"realmID,omitempty"`
	PlayerGUID   uint64 `protobuf:"varint,3,opt,name=playerGUID,proto3" json:"playerGUID,omitempty"`
	InstanceID   uint32 `protobuf:"varint,4,opt,name=instanceID,proto3" json:"instanceID,omitempty"`
	IsCrossRealm bool   `protobuf:"varint,5,opt,name=isCrossRealm,proto3" json:"isCrossRealm,omitempty"`
}

func (x *PlayerJoinedBattlegroundRequest) Reset() {
	*x = PlayerJoinedBattlegroundRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaking_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerJoinedBattlegroundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerJoinedBattlegroundRequest) ProtoMessage() {}

func (x *PlayerJoinedBattlegroundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaking_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerJoinedBattlegroundRequest.ProtoReflect.Descriptor instead.
func (*PlayerJoinedBattlegroundRequest) Descriptor() ([]byte, []int) {
	return file_matchmaking_proto_rawDescGZIP(), []int{8}
}

func (x *PlayerJoinedBattlegroundRequest) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *PlayerJoinedBattlegroundRequest) GetRealmID() uint32 {
	if x != nil {
		return x.RealmID
	}
	return 0
}

func (x *PlayerJoinedBattlegroundRequest) GetPlayerGUID() uint64 {
	if x != nil {
		return x.PlayerGUID
	}
	return 0
}

func (x *PlayerJoinedBattlegroundRequest) GetInstanceID() uint32 {
	if x != nil {
		return x.InstanceID
	}
	return 0
}

func (x *PlayerJoinedBattlegroundRequest) GetIsCrossRealm() bool {
	if x != nil {
		return x.IsCrossRealm
	}
	return false
}

type PlayerJoinedBattlegroundResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
}

func (x *PlayerJoinedBattlegroundResponse) Reset() {
	*x = PlayerJoinedBattlegroundResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaking_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerJoinedBattlegroundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerJoinedBattlegroundResponse) ProtoMessage() {}

func (x *PlayerJoinedBattlegroundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaking_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerJoinedBattlegroundResponse.ProtoReflect.Descriptor instead.
func (*PlayerJoinedBattlegroundResponse) Descriptor() ([]byte, []int) {
	return file_matchmaking_proto_rawDescGZIP(), []int{9}
}

func (x *PlayerJoinedBattlegroundResponse) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

type BattlegroundStatusChangedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api          string                                  `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	RealmID      uint32                                  `protobuf:"varint,2,opt,name=realmID,proto3" json:"realmID,omitempty"`
	InstanceID   uint32                                  `protobuf:"varint,3,opt,name=instanceID,proto3" json:"instanceID,omitempty"`
	IsCrossRealm bool                                    `protobuf:"varint,4,opt,name=isCrossRealm,proto3" json:"isCrossRealm,omitempty"`
	Status       BattlegroundStatusChangedRequest_Status `protobuf:"varint,5,opt,name=status,proto3,enum=v1.BattlegroundStatusChangedRequest_Status" json:"status,omitempty"`
}

func (x *BattlegroundStatusChangedRequest) Reset() {
	*x = BattlegroundStatusChangedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaking_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattlegroundStatusChangedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattlegroundStatusChangedRequest) ProtoMessage() {}

func (x *BattlegroundStatusChangedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaking_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattlegroundStatusChangedRequest.ProtoReflect.Descriptor instead.
func (*BattlegroundStatusChangedRequest) Descriptor() ([]byte, []int) {
	return file_matchmaking_proto_rawDescGZIP(), []int{10}
}

func (x *BattlegroundStatusChangedRequest) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *BattlegroundStatusChangedRequest) GetRealmID() uint32 {
	if x != nil {
		return x.RealmID
	}
	return 0
}

func (x *BattlegroundStatusChangedRequest) GetInstanceID() uint32 {
	if x != nil {
		return x.InstanceID
	}
	return 0
}

func (x *BattlegroundStatusChangedRequest) GetIsCrossRealm() bool {
	if x != nil {
		return x.IsCrossRealm
	}
	return false
}

func (x *BattlegroundStatusChangedRequest) GetStatus() BattlegroundStatusChangedRequest_Status {
	if x != nil {
		return x.Status
	}
	return BattlegroundStatusChangedRequest_None
}

type BattlegroundStatusChangedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
}

func (x *BattlegroundStatusChangedResponse) Reset() {
	*x = BattlegroundStatusChangedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaking_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattlegroundStatusChangedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattlegroundStatusChangedResponse) ProtoMessage() {}

func (x *BattlegroundStatusChangedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaking_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattlegroundStatusChangedResponse.ProtoReflect.Descriptor instead.
func (*BattlegroundStatusChangedResponse) Descriptor() ([]byte, []int) {
	return file_matchmaking_proto_rawDescGZIP(), []int{11}
}

func (x *BattlegroundStatusChangedResponse) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

type BattlegroundQueueDataForPlayerResponse_AssignedBattlegroundData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssignedBattlegroundInstanceID uint32 `protobuf:"varint,1,opt,name=assignedBattlegroundInstanceID,proto3" json:"assignedBattlegroundInstanceID,omitempty"`
	MapID                          uint32 `protobuf:"varint,2,opt,name=mapID,proto3" json:"mapID,omitempty"`
	BattlegroupID                  uint32 `protobuf:"varint,3,opt,name=battlegroupID,proto3" json:"battlegroupID,omitempty"`
	GameserverAddress              string `protobuf:"bytes,4,opt,name=gameserverAddress,proto3" json:"gameserverAddress,omitempty"`
	GameserverGRPCAddress          string `protobuf:"bytes,5,opt,name=gameserverGRPCAddress,proto3" json:"gameserverGRPCAddress,omitempty"`
}

func (x *BattlegroundQueueDataForPlayerResponse_AssignedBattlegroundData) Reset() {
	*x = BattlegroundQueueDataForPlayerResponse_AssignedBattlegroundData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaking_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattlegroundQueueDataForPlayerResponse_AssignedBattlegroundData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattlegroundQueueDataForPlayerResponse_AssignedBattlegroundData) ProtoMessage() {}

func (x *BattlegroundQueueDataForPlayerResponse_AssignedBattlegroundData) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaking_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattlegroundQueueDataForPlayerResponse_AssignedBattlegroundData.ProtoReflect.Descriptor instead.
func (*BattlegroundQueueDataForPlayerResponse_AssignedBattlegroundData) Descriptor() ([]byte, []int) {
	return file_matchmaking_proto_rawDescGZIP(), []int{5, 0}
}

func (x *BattlegroundQueueDataForPlayerResponse_AssignedBattlegroundData) GetAssignedBattlegroundInstanceID() uint32 {
	if x != nil {
		return x.AssignedBattlegroundInstanceID
	}
	return 0
}

func (x *BattlegroundQueueDataForPlayerResponse_AssignedBattlegroundData) GetMapID() uint32 {
	if x != nil {
		return x.MapID
	}
	return 0
}

func (x *BattlegroundQueueDataForPlayerResponse_AssignedBattlegroundData) GetBattlegroupID() uint32 {
	if x != nil {
		return x.BattlegroupID
	}
	return 0
}

func (x *BattlegroundQueueDataForPlayerResponse_AssignedBattlegroundData) GetGameserverAddress() string {
	if x != nil {
		return x.GameserverAddress
	}
	return ""
}

func (x *BattlegroundQueueDataForPlayerResponse_AssignedBattlegroundData) GetGameserverGRPCAddress() string {
	if x != nil {
		return x.GameserverGRPCAddress
	}
	return ""
}

type BattlegroundQueueDataForPlayerResponse_QueueSlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BgTypeID                 uint32                                                           `protobuf:"varint,1,opt,name=bgTypeID,proto3" json:"bgTypeID,omitempty"`
	Status                   PlayerQueueStatus                                                `protobuf:"varint,2,opt,name=status,proto3,enum=v1.PlayerQueueStatus" json:"status,omitempty"`
	AssignedBattlegroundData *BattlegroundQueueDataForPlayerResponse_AssignedBattlegroundData `protobuf:"bytes,3,opt,name=assignedBattlegroundData,proto3,oneof" json:"assignedBattlegroundData,omitempty"`
}

func (x *BattlegroundQueueDataForPlayerResponse_QueueSlot) Reset() {
	*x = BattlegroundQueueDataForPlayerResponse_QueueSlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaking_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattlegroundQueueDataForPlayerResponse_QueueSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattlegroundQueueDataForPlayerResponse_QueueSlot) ProtoMessage() {}

func (x *BattlegroundQueueDataForPlayerResponse_QueueSlot) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaking_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattlegroundQueueDataForPlayerResponse_QueueSlot.ProtoReflect.Descriptor instead.
func (*BattlegroundQueueDataForPlayerResponse_QueueSlot) Descriptor() ([]byte, []int) {
	return file_matchmaking_proto_rawDescGZIP(), []int{5, 1}
}

func (x *BattlegroundQueueDataForPlayerResponse_QueueSlot) GetBgTypeID() uint32 {
	if x != nil {
		return x.BgTypeID
	}
	return 0
}

func (x *BattlegroundQueueDataForPlayerResponse_QueueSlot) GetStatus() PlayerQueueStatus {
	if x != nil {
		return x.Status
	}
	return PlayerQueueStatus_NotInQueue
}

func (x *BattlegroundQueueDataForPlayerResponse_QueueSlot) GetAssignedBattlegroundData() *BattlegroundQueueDataForPlayerResponse_AssignedBattlegroundData {
	if x != nil {
		return x.AssignedBattlegroundData
	}
	return nil
}

var File_matchmaking_proto protoreflect.FileDescriptor

var file_matchmaking_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x22, 0xf1, 0x01, 0x0a, 0x1c, 0x45, 0x6e, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x54, 0x6f, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x61, 0x6c, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x61,
	0x6c, 0x6d, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x47, 0x55,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x47, 0x55, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x79, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x4c, 0x76, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x4c, 0x76, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x56, 0x50, 0x54, 0x65, 0x61,
	0x6d, 0x49, 0x44, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x22, 0x31, 0x0a, 0x1d, 0x45,
	0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x6f, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x22, 0x96,
	0x01, 0x0a, 0x1c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46,
	0x72, 0x6f, 0x6d, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70,
	0x69, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x55, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x55, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x62,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x31, 0x0a, 0x1d, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x22, 0x73, 0x0a, 0x25, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x44, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x55, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x55, 0x49, 0x44, 0x22,
	0x88, 0x05, 0x0a, 0x26, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x4a, 0x0a, 0x05,
	0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x6c, 0x6f,
	0x74, 0x52, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x1a, 0x82, 0x02, 0x0a, 0x18, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x46, 0x0a, 0x1e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1e, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x61, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x61,
	0x70, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x67, 0x61, 0x6d,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x52, 0x50, 0x43, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x47, 0x52, 0x50, 0x43, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0xfa, 0x01,
	0x0a, 0x09, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x84, 0x01, 0x0a, 0x18, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00,
	0x52, 0x18, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x1b, 0x0a,
	0x19, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0xaf, 0x01, 0x0a, 0x1d, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x47, 0x55, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x47, 0x55, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x43, 0x72,
	0x6f, 0x73, 0x73, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x69, 0x73, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x22, 0x32, 0x0a, 0x1e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69,
	0x22, 0xb1, 0x01, 0x0a, 0x1f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x65,
	0x64, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x55, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x55, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x61, 0x6c, 0x6d,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x52,
	0x65, 0x61, 0x6c, 0x6d, 0x22, 0x34, 0x0a, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4a, 0x6f,
	0x69, 0x6e, 0x65, 0x64, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x22, 0xa3, 0x02, 0x0a, 0x20, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70,
	0x69, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x69,
	0x73, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x69, 0x73, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x12,
	0x43, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2b, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x4a, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x61, 0x69, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x57, 0x61, 0x69, 0x74, 0x4a,
	0x6f, 0x69, 0x6e, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x6e, 0x64, 0x65, 0x64, 0x10, 0x04,
	0x22, 0x35, 0x0a, 0x21, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x2a, 0x2d, 0x0a, 0x09, 0x50, 0x56, 0x50, 0x54, 0x65,
	0x61, 0x6d, 0x49, 0x44, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x6e, 0x79, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x48,
	0x6f, 0x72, 0x64, 0x65, 0x10, 0x02, 0x2a, 0x4d, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x0a, 0x4e,
	0x6f, 0x74, 0x49, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x49,
	0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x10, 0x03, 0x32, 0xfb, 0x04, 0x0a, 0x12, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x6d,
	0x61, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5c, 0x0a, 0x15,
	0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x6f, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x20, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x54, 0x6f, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x54, 0x6f, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x15, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x12, 0x20, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x1e, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x29, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5f, 0x0a, 0x16, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x21, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x65, 0x0a, 0x18, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e,
	0x65, 0x64, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x23,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4a,
	0x6f, 0x69, 0x6e, 0x65, 0x64, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x19, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x24, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x14, 0x5a, 0x12, 0x67, 0x65, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x6d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_matchmaking_proto_rawDescOnce sync.Once
	file_matchmaking_proto_rawDescData = file_matchmaking_proto_rawDesc
)

func file_matchmaking_proto_rawDescGZIP() []byte {
	file_matchmaking_proto_rawDescOnce.Do(func() {
		file_matchmaking_proto_rawDescData = protoimpl.X.CompressGZIP(file_matchmaking_proto_rawDescData)
	})
	return file_matchmaking_proto_rawDescData
}

var file_matchmaking_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_matchmaking_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_matchmaking_proto_goTypes = []interface{}{
	(PVPTeamID)(0),         // 0: v1.PVPTeamID
	(PlayerQueueStatus)(0), // 1: v1.PlayerQueueStatus
	(BattlegroundStatusChangedRequest_Status)(0),                            // 2: v1.BattlegroundStatusChangedRequest.Status
	(*EnqueueToBattlegroundRequest)(nil),                                    // 3: v1.EnqueueToBattlegroundRequest
	(*EnqueueToBattlegroundResponse)(nil),                                   // 4: v1.EnqueueToBattlegroundResponse
	(*RemovePlayerFromQueueRequest)(nil),                                    // 5: v1.RemovePlayerFromQueueRequest
	(*RemovePlayerFromQueueResponse)(nil),                                   // 6: v1.RemovePlayerFromQueueResponse
	(*BattlegroundQueueDataForPlayerRequest)(nil),                           // 7: v1.BattlegroundQueueDataForPlayerRequest
	(*BattlegroundQueueDataForPlayerResponse)(nil),                          // 8: v1.BattlegroundQueueDataForPlayerResponse
	(*PlayerLeftBattlegroundRequest)(nil),                                   // 9: v1.PlayerLeftBattlegroundRequest
	(*PlayerLeftBattlegroundResponse)(nil),                                  // 10: v1.PlayerLeftBattlegroundResponse
	(*PlayerJoinedBattlegroundRequest)(nil),                                 // 11: v1.PlayerJoinedBattlegroundRequest
	(*PlayerJoinedBattlegroundResponse)(nil),                                // 12: v1.PlayerJoinedBattlegroundResponse
	(*BattlegroundStatusChangedRequest)(nil),                                // 13: v1.BattlegroundStatusChangedRequest
	(*BattlegroundStatusChangedResponse)(nil),                               // 14: v1.BattlegroundStatusChangedResponse
	(*BattlegroundQueueDataForPlayerResponse_AssignedBattlegroundData)(nil), // 15: v1.BattlegroundQueueDataForPlayerResponse.AssignedBattlegroundData
	(*BattlegroundQueueDataForPlayerResponse_QueueSlot)(nil),                // 16: v1.BattlegroundQueueDataForPlayerResponse.QueueSlot
}
var file_matchmaking_proto_depIdxs = []int32{
	0,  // 0: v1.EnqueueToBattlegroundRequest.teamID:type_name -> v1.PVPTeamID
	16, // 1: v1.BattlegroundQueueDataForPlayerResponse.slots:type_name -> v1.BattlegroundQueueDataForPlayerResponse.QueueSlot
	2,  // 2: v1.BattlegroundStatusChangedRequest.status:type_name -> v1.BattlegroundStatusChangedRequest.Status
	1,  // 3: v1.BattlegroundQueueDataForPlayerResponse.QueueSlot.status:type_name -> v1.PlayerQueueStatus
	15, // 4: v1.BattlegroundQueueDataForPlayerResponse.QueueSlot.assignedBattlegroundData:type_name -> v1.BattlegroundQueueDataForPlayerResponse.AssignedBattlegroundData
	3,  // 5: v1.MatchmakingService.EnqueueToBattleground:input_type -> v1.EnqueueToBattlegroundRequest
	5,  // 6: v1.MatchmakingService.RemovePlayerFromQueue:input_type -> v1.RemovePlayerFromQueueRequest
	7,  // 7: v1.MatchmakingService.BattlegroundQueueDataForPlayer:input_type -> v1.BattlegroundQueueDataForPlayerRequest
	9,  // 8: v1.MatchmakingService.PlayerLeftBattleground:input_type -> v1.PlayerLeftBattlegroundRequest
	11, // 9: v1.MatchmakingService.PlayerJoinedBattleground:input_type -> v1.PlayerJoinedBattlegroundRequest
	13, // 10: v1.MatchmakingService.BattlegroundStatusChanged:input_type -> v1.BattlegroundStatusChangedRequest
	4,  // 11: v1.MatchmakingService.EnqueueToBattleground:output_type -> v1.EnqueueToBattlegroundResponse
	6,  // 12: v1.MatchmakingService.RemovePlayerFromQueue:output_type -> v1.RemovePlayerFromQueueResponse
	8,  // 13: v1.MatchmakingService.BattlegroundQueueDataForPlayer:output_type -> v1.BattlegroundQueueDataForPlayerResponse
	10, // 14: v1.MatchmakingService.PlayerLeftBattleground:output_type -> v1.PlayerLeftBattlegroundResponse
	12, // 15: v1.MatchmakingService.PlayerJoinedBattleground:output_type -> v1.PlayerJoinedBattlegroundResponse
	14, // 16: v1.MatchmakingService.BattlegroundStatusChanged:output_type -> v1.BattlegroundStatusChangedResponse
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_matchmaking_proto_init() }
func file_matchmaking_proto_init() {
	if File_matchmaking_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_matchmaking_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnqueueToBattlegroundRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchmaking_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnqueueToBattlegroundResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchmaking_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePlayerFromQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchmaking_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePlayerFromQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchmaking_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattlegroundQueueDataForPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchmaking_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattlegroundQueueDataForPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchmaking_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerLeftBattlegroundRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchmaking_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerLeftBattlegroundResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchmaking_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerJoinedBattlegroundRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchmaking_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerJoinedBattlegroundResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchmaking_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattlegroundStatusChangedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchmaking_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattlegroundStatusChangedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchmaking_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattlegroundQueueDataForPlayerResponse_AssignedBattlegroundData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchmaking_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattlegroundQueueDataForPlayerResponse_QueueSlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_matchmaking_proto_msgTypes[13].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_matchmaking_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_matchmaking_proto_goTypes,
		DependencyIndexes: file_matchmaking_proto_depIdxs,
		EnumInfos:         file_matchmaking_proto_enumTypes,
		MessageInfos:      file_matchmaking_proto_msgTypes,
	}.Build()
	File_matchmaking_proto = out.File
	file_matchmaking_proto_rawDesc = nil
	file_matchmaking_proto_goTypes = nil
	file_matchmaking_proto_depIdxs = nil
}
