// Code generated by mockery v2.20.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	events "github.com/walkline/ToCloud9/shared/events"
)

// GatewayProducer is an autogenerated mock type for the GatewayProducer type
type GatewayProducer struct {
	mock.Mock
}

// CharacterLoggedIn provides a mock function with given fields: payload
func (_m *GatewayProducer) CharacterLoggedIn(payload *events.GWEventCharacterLoggedInPayload) error {
	ret := _m.Called(payload)

	var r0 error
	if rf, ok := ret.Get(0).(func(*events.GWEventCharacterLoggedInPayload) error); ok {
		r0 = rf(payload)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CharacterLoggedOut provides a mock function with given fields: payload
func (_m *GatewayProducer) CharacterLoggedOut(payload *events.GWEventCharacterLoggedOutPayload) error {
	ret := _m.Called(payload)

	var r0 error
	if rf, ok := ret.Get(0).(func(*events.GWEventCharacterLoggedOutPayload) error); ok {
		r0 = rf(payload)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CharactersUpdates provides a mock function with given fields: payload
func (_m *GatewayProducer) CharactersUpdates(payload *events.GWEventCharactersUpdatesPayload) error {
	ret := _m.Called(payload)

	var r0 error
	if rf, ok := ret.Get(0).(func(*events.GWEventCharactersUpdatesPayload) error); ok {
		r0 = rf(payload)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewGatewayProducer interface {
	mock.TestingT
	Cleanup(func())
}

// NewGatewayProducer creates a new instance of GatewayProducer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewGatewayProducer(t mockConstructorTestingTNewGatewayProducer) *GatewayProducer {
	mock := &GatewayProducer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
